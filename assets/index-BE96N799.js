import{f as O,q as _,a as $,b as R}from"./index-DUrIFciP.js";const C=(e,o)=>({...e,getList:async function(a,i){let t=i;t=await s({name:"beforeGetList",params:t,dataProvider:e,handlers:o,resource:a});let n=await e.getList(a,t);return n=await s({name:"afterGetList",params:n,dataProvider:e,handlers:o,resource:a}),n.data=await Promise.all(n.data.map(r=>s({name:"afterRead",params:r,dataProvider:e,handlers:o,resource:a}))),n},getOne:async function(a,i){let t=i;t=await s({name:"beforeGetOne",params:t,dataProvider:e,handlers:o,resource:a});let n=await e.getOne(a,t);return n=await s({name:"afterGetOne",params:n,dataProvider:e,handlers:o,resource:a}),n.data=await s({name:"afterRead",params:n.data,dataProvider:e,handlers:o,resource:a}),n},getMany:async function(a,i){let t=i;t=await s({name:"beforeGetMany",params:t,dataProvider:e,handlers:o,resource:a});let n=await e.getMany(a,t);return n=await s({name:"afterGetMany",params:n,dataProvider:e,handlers:o,resource:a}),n.data=await Promise.all(n.data.map(r=>s({name:"afterRead",params:r,dataProvider:e,handlers:o,resource:a}))),n},getManyReference:async function(a,i){let t=i;t=await s({name:"beforeGetManyReference",params:t,dataProvider:e,handlers:o,resource:a});let n=await e.getManyReference(a,t);return n=await s({name:"afterGetManyReference",params:n,dataProvider:e,handlers:o,resource:a}),n.data=await Promise.all(n.data.map(r=>s({name:"afterRead",params:r,dataProvider:e,handlers:o,resource:a}))),n},update:async function(a,i){let t=i;t=await s({name:"beforeUpdate",params:t,dataProvider:e,handlers:o,resource:a}),t.data=await s({name:"beforeSave",params:t.data,dataProvider:e,handlers:o,resource:a});let n=await e.update(a,t);return n=await s({name:"afterUpdate",params:n,dataProvider:e,handlers:o,resource:a}),n.data=await s({name:"afterSave",params:n.data,dataProvider:e,handlers:o,resource:a}),n},create:async function(a,i){let t=i;t=await s({name:"beforeCreate",params:t,dataProvider:e,handlers:o,resource:a}),t.data=await s({name:"beforeSave",params:t.data,dataProvider:e,handlers:o,resource:a});let n=await e.create(a,t);return n=await s({name:"afterCreate",params:n,dataProvider:e,handlers:o,resource:a}),n.data=await s({name:"afterSave",params:n.data,dataProvider:e,handlers:o,resource:a}),n},delete:async function(a,i){let t=i;t=await s({name:"beforeDelete",params:t,dataProvider:e,handlers:o,resource:a});let n=await e.delete(a,t);return n=await s({name:"afterDelete",params:n,dataProvider:e,handlers:o,resource:a}),n},updateMany:async function(a,i){let t=i;t=await s({name:"beforeUpdateMany",params:t,dataProvider:e,handlers:o,resource:a}),t.data=await s({name:"beforeSave",params:t.data,dataProvider:e,handlers:o,resource:a});let n=await e.updateMany(a,t);if(n=await s({name:"afterUpdateMany",params:n,dataProvider:e,handlers:o,resource:a}),o.filter(c=>(c.resource===a||c.resource==="*")&&c.afterSave).length>0){const{data:c}=await e.getMany(a,{ids:n.data});await Promise.all(c.map(l=>s({name:"afterSave",params:l,dataProvider:e,handlers:o,resource:a})))}return n},deleteMany:async function(a,i){let t=i;t=await s({name:"beforeDeleteMany",params:t,dataProvider:e,handlers:o,resource:a});let n=await e.deleteMany(a,t);return n=await s({name:"afterDeleteMany",params:n,dataProvider:e,handlers:o,resource:a}),n}}),s=async function({name:e,params:o,dataProvider:a,handlers:i,resource:t}){let n=o;const r=i.filter(c=>(c.resource===t||c.resource==="*")&&c[e]);for(let c of r){const l=c[e];if(Array.isArray(l))for(let m of l??[])n=await m(n,a,t);else n=await l(n,a,t)}return n},M=(e,{resourceName:o}={resourceName:"revisions"})=>({...e,getRevisions:(a,{recordId:i})=>e.getList(o,{filter:{resource:a,recordId:i},sort:{field:"date",order:"DESC"},pagination:{page:1,perPage:100}}),addRevision:(a,{recordId:i,data:t,authorId:n,message:r,description:c})=>e.create(o,{data:{resource:a,recordId:i,date:new Date().toISOString(),message:r,description:c,authorId:n,data:t}}),deleteRevisions:async(a,{recordId:i})=>{const{data:t}=await e.getList(o,{filter:{resource:a,recordId:i},sort:{field:"date",order:"DESC"},pagination:{page:1,perPage:100}});return e.deleteMany(o,{ids:t.map(n=>n.id)})}}),I=(e,o=O,a="Content-Range")=>({getList:(i,t)=>{const{page:n,perPage:r}=t.pagination||{page:1,perPage:10},{field:c,order:l}=t.sort||{field:"id",order:"ASC"},m=(n-1)*r,g=n*r-1,w={sort:JSON.stringify([c,l]),range:JSON.stringify([m,g]),filter:JSON.stringify(t.filter)},p=`${e}/${i}?${_.stringify(w)}`,y=a==="Content-Range"?{headers:new Headers({Range:`${i}=${m}-${g}`}),signal:t==null?void 0:t.signal}:{signal:t==null?void 0:t.signal};return o(p,y).then(({headers:d,json:b})=>{if(!d.has(a))throw new Error(`The ${a} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${a} in the Access-Control-Expose-Headers header?`);return{data:b,total:a==="Content-Range"?parseInt(d.get("content-range").split("/").pop()||"",10):parseInt(d.get(a.toLowerCase()))}})},getOne:(i,t)=>o(`${e}/${i}/${encodeURIComponent(t.id)}`,{signal:t==null?void 0:t.signal}).then(({json:n})=>({data:n})),getMany:(i,t)=>{const n={filter:JSON.stringify({id:t.ids})},r=`${e}/${i}?${_.stringify(n)}`;return o(r,{signal:t==null?void 0:t.signal}).then(({json:c})=>({data:c}))},getManyReference:(i,t)=>{const{page:n,perPage:r}=t.pagination,{field:c,order:l}=t.sort,m=(n-1)*r,g=n*r-1,w={sort:JSON.stringify([c,l]),range:JSON.stringify([(n-1)*r,n*r-1]),filter:JSON.stringify({...t.filter,[t.target]:t.id})},p=`${e}/${i}?${_.stringify(w)}`,y=a==="Content-Range"?{headers:new Headers({Range:`${i}=${m}-${g}`}),signal:t==null?void 0:t.signal}:{signal:t==null?void 0:t.signal};return o(p,y).then(({headers:d,json:b})=>{if(!d.has(a))throw new Error(`The ${a} header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ${a} in the Access-Control-Expose-Headers header?`);return{data:b,total:a==="Content-Range"?parseInt(d.get("content-range").split("/").pop()||"",10):parseInt(d.get(a.toLowerCase()))}})},update:(i,t)=>o(`${e}/${i}/${encodeURIComponent(t.id)}`,{method:"PUT",body:JSON.stringify(t.data)}).then(({json:n})=>({data:n})),updateMany:(i,t)=>Promise.all(t.ids.map(n=>o(`${e}/${i}/${encodeURIComponent(n)}`,{method:"PUT",body:JSON.stringify(t.data)}))).then(n=>({data:n.map(({json:r})=>r.id)})),create:(i,t)=>o(`${e}/${i}`,{method:"POST",body:JSON.stringify(t.data)}).then(({json:n})=>({data:n})),delete:(i,t)=>o(`${e}/${i}/${encodeURIComponent(t.id)}`,{method:"DELETE",headers:new Headers({"Content-Type":"text/plain"})}).then(({json:n})=>({data:n})),deleteMany:(i,t)=>Promise.all(t.ids.map(n=>o(`${e}/${i}/${encodeURIComponent(n)}`,{method:"DELETE",headers:new Headers({"Content-Type":"text/plain"})}))).then(n=>({data:n.map(({json:r})=>r.id)}))}),u="user",S={id:1,email:"janedoe@atomic.dev",password:"demo"},f=()=>{const e=localStorage.getItem(u);return e?JSON.parse(e):null},E=I("https://fake-atomic-pm.com"),A=$(E),L=M(C({...A,subscribe:()=>Promise.resolve(),unsubscribe:()=>Promise.resolve(),moveColumn:async({data:e,previousData:o})=>{const a=window._database.collections.columns.getAll({filter:{position:{board_id:o.board_id,position_gt:o.position}},sort:["position","asc"],range:[0,1e3]});for(const i of a)window._database.collections.columns.updateOne(i.id,{...i,position:i.position-1});window._database.collections.columns.getAll({filter:{position:{board_id:o.board_id,position_gte:e.position}},sort:["position","asc"],range:[0,1e3]});for(const i of a)window._database.collections.columns.updateOne(i.id,{...i,position:i.position+1});window._database.collections.columns.updateOne(e.column_id,{position:e.position})},moveCard:async({data:e,previousData:o})=>{const a=window._database.collections.cards.getAll({filter:{position:{column_id:o.column_id,position_gt:o.position}},sort:["position","asc"],range:[0,1e3]});for(const n of a)window._database.collections.cards.updateOne(n.id,{...n,position:n.position-1});window._database.collections.columns.getAll({filter:{position:{column_id:o.column_id,position_gte:e.position}},sort:["position","asc"],range:[0,1e3]});for(const n of a)window._database.collections.columns.updateOne(n.id,{...n,position:n.position+1});window._database.collections.cards.updateOne(e.card_id,{column_id:e.column_id,position:e.position});const i=window._database.collections.columns.getOne(o.column_id),t=f();if(o.column_id!==e.column_id){const n=window._database.collections.columns.getOne(e.column_id);window._database.collections.card_events.addOne({card_id:e.card_id,user_id:t.id,date:new Date().toISOString(),type:"revision",message:`Moved card from column "${i.name}" to "${n.name}" at position ${e.position}`})}else window._database.collections.card_events.addOne({card_id:e.card_id,user_id:t.id,date:new Date().toISOString(),type:"revision",message:`Moved card to position ${e.position} `})},getDocumentUrl:async({data:e})=>{const o=localStorage.getItem(e.filePath);if(!o)return null;const[,a]=o.split(","),i=Uint8Array.from(atob(a),r=>r.charCodeAt(0)),t=new Blob([i]);return{data:URL.createObjectURL(t)}},getCardFromBoardAndNumber:async({data:e})=>({data:window._database.collections.columns.getAll({filter:{board_id:e.board_id},embed:["cards"]}).flatMap(t=>t.cards.map(n=>n)).find(t=>t.number==e.number)})},[{resource:"boards",afterGetOne:async e=>{const o=e.data,a=window._database.collections.columns.getAll({filter:{board_id:o.id},sort:["position","asc"],range:[0,1e3],embed:["cards"]});return{...e,data:{...o,columns:a}}},beforeGetList:e=>{const o=f();return Promise.resolve({...e,filter:{...e.filter,user_id:o.id}})},afterCreate:async e=>{const o=e.data;return window._database.collections.columns.addOne({name:"",board_id:o.id,position:0}),e}},{resource:"documents",beforeCreate:async({data:e,meta:o})=>{if(e.content instanceof File){const a=await new Promise(i=>{const t=new FileReader;t.onload=()=>{i(t.result)},t.readAsDataURL(e.content)});localStorage.setItem(e.content.name,a),e.type=e.content.type,e.content=e.content.name}return{data:e,meta:o}}},{resource:"card_attachments",beforeCreate:async({data:e,meta:o})=>{if(e.content instanceof File){const a=await new Promise(i=>{const t=new FileReader;t.onload=()=>{i(t.result)},t.readAsDataURL(e.content)});localStorage.setItem(e.content.name,a),e.type=e.content.type,e.content=e.content.name}return{data:e,meta:o}}},{resource:"comments",afterCreate:async({data:e,meta:o})=>{const a=f();return window._database.collections.card_events.addOne({card_id:e.card_id,user_id:a.id,date:new Date().toISOString(),type:"comment",message:e.message}),R.invalidateQueries({queryKey:["card_events","getManyReference"]}),{data:e,meta:o}}},{resource:"revisions",beforeGetList:async e=>{if(e!=null&&e.filter["date@lt"]){const{"date@lt":o,...a}=e.filter;return{...e,filter:{...a,date_lt:o}}}return e},afterCreate:async({data:e,meta:o})=>{const a=f();return e.resource==="cards"&&(window._database.collections.card_events.addOne({card_id:e.recordId,revision_id:e.id,user_id:a.id,date:new Date().toISOString(),type:"revision",message:e.message}),R.invalidateQueries({queryKey:["card_events","getManyReference"]})),{data:e,meta:o}}}]));localStorage.setItem(u,JSON.stringify({...S}));async function T(e){const o=await L.getList("profiles",{pagination:{page:1,perPage:200},sort:{field:"name",order:"ASC"}});if(!o.data.length)return{...S};const a=o.data.find(i=>i.email===e);return!a||a.disabled?{...S}:a}const D={login:async({email:e})=>{const o=await T(e);return localStorage.setItem(u,JSON.stringify(o)),Promise.resolve()},logout:()=>(localStorage.removeItem(u),Promise.resolve()),checkError:()=>Promise.resolve(),checkAuth:()=>f()?Promise.resolve():Promise.reject(),getIdentity:()=>{const e=f();return Promise.resolve({id:e.id,fullName:e.email})}};export{D as authProvider,L as dataProvider};
